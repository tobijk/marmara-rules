<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE control [
  <!ENTITY expect SYSTEM "expect.xml">
  <!ENTITY expect-dev SYSTEM "expect-dev.xml">
  <!ENTITY rules SYSTEM "rules.xml">
  <!ENTITY changelog SYSTEM "changelog.xml">
]>
<control xmlns:xi="http://www.w3.org/2001/XInclude">

    <defines>
        <def name="XPACK_SOURCE_DIR"  value="expect-src"/>
        <def name="XPACK_BUILD_DIR"   value="tmp-build"/>
        <def name="XPACK_INSTALL_DIR" value="tmp-install"/>
    </defines>

    <source name="expect" architecture-independent="false">
        <description>
            <summary>A program that can automate interactive applications</summary>
            <p>
            Expect is a tool for automating interactive applications according to a script.
            Following the script, Expect knows what can be expected from a program and what
            the correct response should be. Expect is also useful for testing these same
            applications. And by adding Tk, you can also wrap interactive applications in
            X11 GUIs. An interpreted language provides branching and high-level control
            structures to direct the dialogue. In addition, the user can take control and
            interact directly when desired, afterward returning control to the script.
            </p>
        </description>

        <sources>
            <file src="expect5.45.tar.gz"/>
        </sources>

        <patches>
            <patchset>
                <file src="patches/05-makefile-soname.patch"/>
            </patchset>
        </patches>

        <requires>
            <package name="autotools-dev"/>
            <package name="autoconf"/>
            <package name="tcl8.5-dev"/>
        </requires>

        <!-- build rules -->
        &rules;
    </source>

    <!-- package rules -->
    &expect;
    &expect-dev;

    <!-- changelog -->
    &changelog;

</control> 
